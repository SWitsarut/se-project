generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @unique @default(uuid())
  username      String    @unique
  email         String    @unique
  displayName   String
  password      String
  avatar        String?
  role          Role      @default(USER)
  isActive      Boolean   @default(true)
  emailVerified DateTime?

  createdAt   DateTime   @default(now())
  publisher   Publisher? @relation(fields: [publisherId], references: [id])
  publisherId String?
  carts       CartItem[]
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Publisher {
  id            String @id @default(cuid())
  publisherName String @unique

  book    Book[]
  manager User[]
}

model Book {
  isbn        String  @id @unique
  title       String  @unique
  price       Float
  cover       String
  pdfUrl      String
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isSelling Boolean  @default(true)

  publisher   Publisher @relation(fields: [publisherId], references: [id])
  publisherId String
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int
  genres      Genre[]   @relation("BookGenres")
  authors     Author[]  @relation("BookAuthors")
  carts       CartItem[]

}

model CartItem {
  id         Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [id])
  book       Book      @relation(fields: [bookId], references: [isbn])
  userId     String
  bookId     String
  createTime DateTime  @default(now())
}

model Invoice {
  id        Int     @id @default(autoincrement())
  userOrders UserOrder[] @relation("InvoiceUserOrders")
  createdAt DateTime   @default(now())
}

model UserOrder {
  id       Int      @id @default(autoincrement())
  invoice  Invoice @relation("InvoiceUserOrders", fields: [invoiceId], references: [id])
  invoiceId Int

  @@unique([id, invoiceId])
}

model Category {
  id           Int    @id @default(autoincrement())
  categoryName String @unique

  books Book[]
}

model Genre {
  id        Int    @id @default(autoincrement())
  genreName String @unique

  books Book[] @relation("BookGenres")
}

model Author {
  id         Int    @id @default(autoincrement())
  authorName String @unique

  books Book[] @relation("BookAuthors")
}

enum Role {
  USER
  ADMIN
  PUBLISHER
}
